" search for actions: :actionlist <patter>
set number                        " line numbers
set relativenumber                " relative line numbers

set hlsearch                      " highlight search occurrences
set ignorecase                    " ignore case in search patterns
set smartcase                     " no ignore case when pattern is uppercase
set incsearch                     " show search results while typing
set wrapscan                      " searches wrap around the end of the file
set showmode
set showcmd

set gdefault                      " substitute all occurrences in line per default
set history=10000                 " keep x lines of command line history
set scrolloff=5 sidescrolloff=10  " keep some lines before and after the cursor visible
set clipboard=unnamedplus,unnamed,ideaput " integrate with system clipboard


" https://github.com/JetBrains/ideavim/wiki/%22set%22-commands
set multiple-cursors
set commentary
set surround                      " emulate vim-surround plugin
set ideajoin
set ideastatusicon


" set <leader> to <space>
let mapleader = " "

" edit ideavim config
nnoremap <leader>vv :e ~/.ideavimrc<CR>
nnoremap <leader>vr :source ~/.ideavimrc<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Fix some vim annoyances

" make Y behave like D and C, yanking till end of line
map Y y$

" don't overwrite register when pasting over selection
" vnoremap p pgvy

" paste over rest of line
" nnoremap <leader>p v$<Left>pgvy
nnoremap <leader>p v$<Left>p

" don't lose selection when indenting
vnoremap < <gv
vnoremap > >gv
vnoremap = =gv

" TODO: smart home
nmap <Home> ^
imap <silent> <Home> <C-O>^

""""""""""""""""""""""""""""""""""""""""""""""""""""
" Custom bindings

" clear search highlighting
nnoremap <leader>/ :nohls<return><esc>

""""""""""""""""""""""""""""""""""""""""""""""""""""
" IDEA specific
nmap <leader>? :action GotoAction<CR>

" https://youtrack.jetbrains.com/issue/VIM-44
nnoremap <c-o> :action Back<CR>
nnoremap <c-i> :action Forward<CR>

nmap L :action NextTab<CR>
nmap H :action PreviousTab<CR>
nmap <c-l> <c-w>l
nmap <c-h> <c-w>h

nmap <leader>ff :action GotoFile<CR>
nmap <leader>fw :action FindInPath<CR>

nmap gr :action ShowUsages<CR>
nmap gi :action GotoImplementation<CR>
nmap gs :action GotoSuperMethod<CR>
nmap gd :action GotoDeclaration<CR>
map gh <Action>(ShowErrorDescription)

nmap <leader>ri :action Inline<CR>
nmap <leader>rr :action RenameElement<CR>
nmap <leader>rev :action IntroduceVariable<CR>
vmap <leader>rev :action IntroduceVariable<CR>
nmap <leader>rem :action ExtractMethod<CR>
vmap <leader>rem :action ExtractMethod<CR>
nmap <leader>rm :action Move<CR>
nmap <leader>ro :action OptimizeImports<CR>
nmap <leader>rG :action Generate<CR>
nmap <leader>rf :action ReformatCode<CR>

" Requires lazygit installed on system, and added as external tool 'LazyGit'
nmap <leader>tg :action Tool_External Tools_LazyGit<CR>

" Requires lazydocker installed on system, and added as external tool 'LazyDocker'
nmap <leader>td :action Tool_External Tools_LazyDocker<CR>

" For hiding run window after external tool use
nmap <leader>th :action HideActiveWindow<CR>

""""""""""""""""""""""""""""""""""""""""""""""""""""
" IDEA plugins

" Easy Motion - Must be installed as plugin through IDE
Plug 'easymotion/vim-easymotion'
set easymotion
map s <Plug>(easymotion-f)
map S <Plug>(easymotion-s)

" NerdTree
Plug 'preservim/nerdtree'
map <leader>e :NERDTree<CR>
map <leader>E :NERDTreeClose<CR>
" j/k for navigation
" enter to open file and focus
" o to open file and focus
" go open file without focus
" s open selected file in new split window

" Surround
Plug 'tpope/vim-surround'
" cs - Change surroundings
" ds - Delete surroundings
" ys - Add surroundings
" S - Surround currently selected text
